---
AWSTemplateFormatVersion: '2010-09-09'

Description: Creates an S3 Bucket, IAM Policies, and SageMaker Notebook needed for the Amazon Personalize Immersion Day.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "SageMaker notebook instance"
        Parameters:
          - NotebookName
          - VolumeSize
      - Label:
          default: "Industry"
        Parameters:
          - domain
    ParameterLabels:
      NotebookName:
        default: "Amazon SageMaker Notebook Name"
      VolumeSize:
        default: "Size (in GB) of the Amazon SageMaker Notebook volume"
      domain:
        default: "Industry domain"

Parameters:
  NotebookName:
    Type: String
    Default: AmazonPersonalizeImmersionDay
    Description: Enter the name of the SageMaker notebook instance. Default is AmazonPersonalizeImmersionDay.

  VolumeSize:
    Type: Number
    Default: 64
    MinValue: 5
    MaxValue: 16384
    ConstraintDescription: Must be an integer between 5 (GB) and 16384 (16 TB).
    Description: Enter the size of the SageMaker notebook instance EBS volume in GB.

  domain:
    Type: String
    # Default: 'Media'
    Description: Select the industry domain to use for the Amazon Personalize Immersion Day.
    AllowedValues:
      - 'Retail'
      - 'Media'

Resources:
  SAMArtifactsBucket:
    Type: AWS::S3::Bucket

  # Amazon Personalize Execution Role
  # ---
  PersonalizeIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: personalize.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
        - "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess"
      # Tagging Ressources to leverage SSM's Application Manager.
      # ---
      Tags:
        - Key: AppManagerCFNStackKey
          Value: !Ref 'AWS::StackId'

  # AWS Identity and Access Management - S3 Custom Access Policy
  # ---
  # This policy allows Sagemaker and Personalize to perform any actions on the 
  # S3 bucket created by this template
  AmazonS3BucketAccessPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
              Effect: Allow
              Action:
                - "s3:*"
              Resource:
                - !Sub arn:aws:s3:::${SAMArtifactsBucket}
                - !Sub arn:aws:s3:::${SAMArtifactsBucket}/*
            -
              Effect: Allow
              Action:
                - "s3:GetObject*"
              Resource:
                - !Sub arn:aws:s3:::elementalrodeo99-us-west-1/aim312
                - !Sub arn:aws:s3:::elementalrodeo99-us-west-1/aim312/*
            -
              Effect: Allow
              Action:
                - "s3:GetObject*"
              Resource:
                - !Sub arn:aws:s3:::retail-demo-store-us-east-1
                - !Sub arn:aws:s3:::retail-demo-store-us-east-1/*
            - 
              Effect: Allow
              Action:
                - "bedrock:*"
              Resource:
                - "*"
        Roles: 
          - !Ref SageMakerIamRole
          - !Ref PersonalizeIamRole
          - !Ref BucketJanitorRole

  # Amazon S3 - S3 Bucket Policy
  # ---
  # This policy allows Personalize to perform any actions on the 
  # S3 bucket created by this template
  PersonalizeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SAMArtifactsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: 'PersonalizeS3BucketAccessPolicy'
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:ListBucket'
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${SAMArtifactsBucket}
              - !Sub arn:aws:s3:::${SAMArtifactsBucket}/*
            Principal:
              Service: personalize.amazonaws.com

  # SageMaker Execution Role
  # SageMakerIamRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         -
  #           Effect: Allow
  #           Principal:
  #             Service: sagemaker.amazonaws.com
  #           Action: sts:AssumeRole
  #     Path: "/"
  #     ManagedPolicyArns:
  #       - "arn:aws:iam::aws:policy/IAMFullAccess"
  #       - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
  #       - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
  #       - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
  #       - "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess"
  #       - "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
  #       - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
  #       - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"

  SageMakerIamRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: Allow
          Principal:
            Service: sagemaker.amazonaws.com
          Action: sts:AssumeRole
    Path: "/"
    ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
      - "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess"
    # Tagging Ressources to leverage SSM's Application Manager.
    # ---
    Tags:
      - Key: AppManagerCFNStackKey
        Value: !Ref 'AWS::StackId'

  # SageMaker notebook
  NotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: "ml.t3.medium"
      NotebookInstanceName: !Ref NotebookName
      RoleArn: !GetAtt SageMakerIamRole.Arn
      VolumeSizeInGB: !Ref VolumeSize
      LifecycleConfigName: !GetAtt AmazonPersonalizeMLOpsLifecycleConfig.NotebookInstanceLifecycleConfigName

  # SSM Parameter with the s3 bucket for personalize
  # ---
  PersonalizeS3Bucket:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cloudformation/personalize-s3-bucket
      Type: String
      Value: !Ref SAMArtifactsBucket
      Description: SSM Parameter containing the s3 bucket for Personalize Samples.
      # Tagging Ressources to leverage SSM's Application Manager.
      # ---
      Tags:
        Key: AppManagerCFNStackKey
        Value: !Ref 'AWS::StackId'

  # SSM Parameter with the IAM Role for personalize
  # ---
  PersonalizeIAMRole:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cloudformation/personalize-iam-role-arn
      Type: String
      Value: !GetAtt PersonalizeIamRole.Arn
      Description: SSM Parameter containing the iam role arn for Personalize.
      # Tagging Ressources to leverage SSM's Application Manager.
      # ---
      Tags:
        Key: AppManagerCFNStackKey
        Value: !Ref 'AWS::StackId'

  AmazonPersonalizeMLOpsLifecycleConfig:
    # The lifecycle configuration clones the github pository ad runs boostrapping code to deploy assets and pre-train models
    # it uses the domain as a parameter in the file path to find the right deploy script

    # TODO Change to actual immersion day repo
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnStart:
        - Content:
            Fn::Base64:
              !Sub |
                #!/bin/bash
                sudo -u ec2-user -i <<'EOF'
                cd /home/ec2-user/SageMaker/
                git clone https://github.com/aws-samples/amazon-personalize-immersion-day.git
                cd /home/ec2-user/SageMaker/amazon-personalize-immersion-day/
                nohup sh ./${domain}/pretrain/deploy.sh "${SAMArtifactsBucket}" &
                EOF